DEFINES =

WARNINGS = -W -Wall -Wno-multichar -Wno-ctor-dtor-privacy

CFLAGS := -O0

GNOMEDIRS = $(ED_GNOME_DIR)
X11DIRS = /usr/X11R6

INCLUDES := 				\
	-I. 				\
	-I../foundation			\
	-I$(GNOMEDIRS)/include		\
	-I$(GNOMEDIRS)/include/glib-1.2	\
	-I$(GNOMEDIRS)/lib/glib/include	\
	-I$(GNOMEDIRS)/include/gtk-1.2	\
#

COMPILE = $(CC) -g $(INCLUDES) $(CFLAGS) $(WARNINGS) $(DEFINES) -c
LINK = $(CC) -g $(LDFLAGS) -shared

OBJ_DIR := .objs
DEPENDENCIES = .x86_dependencies

LIBNAME = libgnobe.so

TARGET = $(OBJ_DIR)/gnobe.so

all: $(TARGET)

$(OBJ_DIR)/%.o: %.cpp
	$(COMPILE) $< -o $@

SRCS := \
	Application.cpp \
	Alert.cpp \
	Bitmap.cpp \
	Box.cpp \
	Button.cpp \
	CheckBox.cpp \
	Color.cpp \
	Control.cpp \
	DataIO.cpp \
	Directory.cpp \
	Entry.cpp \
	File.cpp \
	FilePanel.cpp \
	FindDirectory.cpp \
	Font.cpp \
	Handler.cpp \
	Invoker.cpp \
	Looper.cpp \
	Menu.cpp \
	Message.cpp \
	Messenger.cpp \
	Locker.cpp \
	Node.cpp \
	NodeMonitor.cpp \
	Path.cpp \
	PopUpMenu.cpp \
	Rect.cpp \
	Screen.cpp \
	ScrollBar.cpp \
	ScrollView.cpp \
	StringView.cpp \
	SymLink.cpp \
	TextControl.cpp \
	TextView.cpp \
	Thread.cpp \
	View.cpp \
	Window.cpp \
	GnomeUtils.cpp \
	GnomeClipboardHandler.cpp \
	IOChannel.cpp \
	image.cpp \
	PThread.cpp \
	ObjectGlue.cpp\
	../foundation/CString.cpp \
	../foundation/FunctionObjectMessage.cpp \
	../foundation/ObjectList.cpp \
#

LIBS := \
		-L$(GNOMEDIRS)/lib	\
		-lpthread		\
		-L$(X11DIRS)/lib 	\
		-lgtk 			\
		-lgdk 			\
		-lgnome 		\
		-lgnomeui 		\
		-lart_lgpl 		\
		-lgnomesupport 		\
		-lgdk_pixbuf 		\
		-rdynamic 		\
		-lgmodule 		\
		-lglib 			\
		-ldl 			\
		-lXext 			\
		-lX11 			\
		-lm 			\
#

define SRC_LIST_TO_OBJS
	$(addprefix $(OBJ_DIR)/, $(addsuffix .o, $(foreach file, $(SRCS), \
	$(basename $(notdir $(file))))))
endef

OBJECTS = $(SRC_LIST_TO_OBJS)

DEPFLAG = -M
SEDSCRIPT = sed -e's%^\(.*\.o\)%$$(OBJ_DIR)/\1%'

SRC_PATHS += $(sort $(foreach file, $(SRCS), $(dir $(file))))

VPATH :=
VPATH += $(addprefix :, $(subst  ,:, $(filter-out $($(subst, :, ,$(VPATH))), $(SRC_PATHS))))

# empty rule
FORCE:

deps :: FORCE
	echo "# auto-generated by make deps; do not edit" > $(DEPENDENCIES)
	$(CC) $(INCLUDES) $(CFLAGS) $(DEPFLAG) $(SRCS) | $(SEDSCRIPT) >> $(DEPENDENCIES)

$(TARGET): $(OBJ_DIR) $(OBJECTS)
	$(LINK) $(OBJECTS) $(LIBS) -o $@

$(OBJ_DIR)::
	@[ -d $(OBJ_DIR) ] || mkdir $(OBJ_DIR) > /dev/null 2>&1

install:
	make
	cp $(TARGET) /gnome/lib/$(LIBNAME)
	
	
clean:: FORCE
	rm -rvf $(OBJ_DIR)
	
clobber distclean realclean: clean
	rm -f $(GEN_FILES)


test:
	$(COMPILE) Test.cpp -o $(OBJ_DIR)/Test.o
	cc -g $(OBJ_DIR)/Test.o $(TARGET) -o Test

-include $(DEPENDENCIES)
